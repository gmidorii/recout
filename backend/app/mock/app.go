// Code generated by MockGen. DO NOT EDIT.
// Source: ./app/app.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRandomGenerator is a mock of RandomGenerator interface
type MockRandomGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockRandomGeneratorMockRecorder
}

// MockRandomGeneratorMockRecorder is the mock recorder for MockRandomGenerator
type MockRandomGeneratorMockRecorder struct {
	mock *MockRandomGenerator
}

// NewMockRandomGenerator creates a new mock instance
func NewMockRandomGenerator(ctrl *gomock.Controller) *MockRandomGenerator {
	mock := &MockRandomGenerator{ctrl: ctrl}
	mock.recorder = &MockRandomGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRandomGenerator) EXPECT() *MockRandomGeneratorMockRecorder {
	return m.recorder
}

// Do mocks base method
func (m *MockRandomGenerator) Do(length int) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Do", length)
	ret0, _ := ret[0].(string)
	return ret0
}

// Do indicates an expected call of Do
func (mr *MockRandomGeneratorMockRecorder) Do(length interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Do", reflect.TypeOf((*MockRandomGenerator)(nil).Do), length)
}
